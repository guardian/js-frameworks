---
import { main, header, logo } from '../styles/main.css';
import PreactCounter from '../components/PreactCounter.jsx';
import { Footer } from '../components/Footer.tsx';
import { Markdown } from 'astro/components';


// Cannot import from outside, sadly
type Framework = {
    port: number,
    name: string,
}

const frameworks: Framework[] = [
    { port: 3001, name: "NextJS" },
    { port: 3002, name: "Astro" },
    { port: 3003, name: "Svelte Kit" },
];



// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.
let title = 'The Guardian | Astro';
const framework = frameworks[1].name;
---
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <title>{title}</title>

        <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    
    <!-- <link rel="stylesheet" href="/style/global.css"> -->
    <!-- <link rel="stylesheet" href="/style/home.css"> -->

    <!-- this is slow â€“ do not use it for production Guardian sites -->
    <link href="https://assets.guim.co.uk/static/frontend/fonts/font-faces.css" rel="stylesheet" />
</head>
<body>

<header class={header}>
	<h1 class={logo}>The Guardian</h1>
	<h2>{framework}</h2>
</header>

    <main class={main}>

		<p>
			This is the {framework} implementation of a simple page.
		</p>

		<p>
			You can see other implementation here, provided you ran
			<code>pnpm -r build-and-preview</code> in the top folder
		</p>
		<ul>
			{frameworks.map(framework => {
				const { port, name } = framework;
				return <li><a href={`http://localhost:${port}`}>{name}: port {port}</a></li>
			})}
		</ul>

		<PreactCounter client:visible />

		<Markdown>
		### Drawbacks

		- Still in alpha
		- No full support for vanilla extract
		</Markdown>
    </main>

    <Footer />
</body>
</html>